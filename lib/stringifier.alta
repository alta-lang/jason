import "classes.alta" as jason
import String from "string"
import Size from "types"
import floatingPointToString from "util"
import escapeString from "util.alta"

export function stringify(item: ptr jason.Jason): String {
  let result = new String
  let json: ref jason.Jason = *item
  if json instanceof jason.Null {
    result.append("null")
  } else if json instanceof jason.Array {
    result.append("[")
    let arr = json as ref jason.Array
    let isFirst = true
    for i: Size in 0..arr.length {
      if isFirst {
        isFirst = false
      } else {
        result.append(",")
      }
      result.append(stringify(arr.get(i)))
    }
    result.append("]")
  } else if json instanceof jason.Object {
    result.append("{")
    let obj = json as ref jason.Object
    let keys = obj.getKeys()
    let isFirst = true
    for i: Size in 0..keys.length {
      if isFirst {
        isFirst = false
      } else {
        result.append(",")
      }
      let key = keys.get(i)
      result.append("\"")
      result.append(escapeString(key))
      result.append("\"")
      result.append(":")
      result.append(stringify(obj.get(key)))
    }
    result.append("}")
  } else if json instanceof jason.String {
    let str = json as ref jason.String
    result.append("\"")
    result.append(escapeString(str))
    result.append("\"")
  } else if json instanceof jason.Number {
    let num = json as ref jason.Number
    result.append(floatingPointToString<double>(num.value))
  } else if json instanceof jason.Boolean {
    let bool = json as ref jason.Boolean
    if bool.value {
      result.append("true")
    } else {
      result.append("false")
    }
  }
  return result
}
